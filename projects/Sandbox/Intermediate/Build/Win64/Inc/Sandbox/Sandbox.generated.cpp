// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Sandbox.h"
#include "Sandbox.generated.dep.h"
void EmptyLinkFunctionForGeneratedCodeSandbox() {}
	void ACallbackListener::StaticRegisterNativesACallbackListener()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACallbackListener::StaticClass(),"GetMidiAutomation",(Native)&ACallbackListener::execGetMidiAutomation);
	}
	IMPLEMENT_CLASS(ACallbackListener, 3580161852);
	void ACallbackListener::OnMarker(const FString& label)
	{
		CallbackListener_eventOnMarker_Parms Parms;
		Parms.label=label;
		ProcessEvent(FindFunctionChecked(SANDBOX_OnMarker),&Parms);
	}
	void ACallbackListener::OnMidiAutomation(int32 channel, int32 id, float value)
	{
		CallbackListener_eventOnMidiAutomation_Parms Parms;
		Parms.channel=channel;
		Parms.id=id;
		Parms.value=value;
		ProcessEvent(FindFunctionChecked(SANDBOX_OnMidiAutomation),&Parms);
	}
	void ACallbackListener::OnMidiNote(int32 Channel, int32 Pitch, float Velocity, bool IsNoteOn)
	{
		CallbackListener_eventOnMidiNote_Parms Parms;
		Parms.Channel=Channel;
		Parms.Pitch=Pitch;
		Parms.Velocity=Velocity;
		Parms.IsNoteOn=IsNoteOn ? true : false;
		ProcessEvent(FindFunctionChecked(SANDBOX_OnMidiNote),&Parms);
	}
FName SANDBOX_OnMarker = FName(TEXT("OnMarker"));
FName SANDBOX_OnMidiAutomation = FName(TEXT("OnMidiAutomation"));
FName SANDBOX_OnMidiNote = FName(TEXT("OnMidiNote"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();

	SANDBOX_API class UFunction* Z_Construct_UFunction_ACallbackListener_GetMidiAutomation();
	SANDBOX_API class UFunction* Z_Construct_UFunction_ACallbackListener_OnMarker();
	SANDBOX_API class UFunction* Z_Construct_UFunction_ACallbackListener_OnMidiAutomation();
	SANDBOX_API class UFunction* Z_Construct_UFunction_ACallbackListener_OnMidiNote();
	SANDBOX_API class UClass* Z_Construct_UClass_ACallbackListener_NoRegister();
	SANDBOX_API class UClass* Z_Construct_UClass_ACallbackListener();
	SANDBOX_API class UPackage* Z_Construct_UPackage_Sandbox();
	UFunction* Z_Construct_UFunction_ACallbackListener_GetMidiAutomation()
	{
		struct CallbackListener_eventGetMidiAutomation_Parms
		{
			int32 id;
			int32 index;
			float ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_ACallbackListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GetMidiAutomation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(CallbackListener_eventGetMidiAutomation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, CallbackListener_eventGetMidiAutomation_Parms), 0x0000000000000580);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(index, CallbackListener_eventGetMidiAutomation_Parms), 0x0000000000000080);
			UProperty* NewProp_id = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("id"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(id, CallbackListener_eventGetMidiAutomation_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MIDI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_index, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_id, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACallbackListener_OnMarker()
	{
		UClass* OuterClass=Z_Construct_UClass_ACallbackListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnMarker"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(CallbackListener_eventOnMarker_Parms));
			UProperty* NewProp_label = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("label"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(label, CallbackListener_eventOnMarker_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GlobalEvents"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_label, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACallbackListener_OnMidiAutomation()
	{
		UClass* OuterClass=Z_Construct_UClass_ACallbackListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnMidiAutomation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(CallbackListener_eventOnMidiAutomation_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(value, CallbackListener_eventOnMidiAutomation_Parms), 0x0000000000000080);
			UProperty* NewProp_id = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("id"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(id, CallbackListener_eventOnMidiAutomation_Parms), 0x0000000000000080);
			UProperty* NewProp_channel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("channel"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(channel, CallbackListener_eventOnMidiAutomation_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GlobalEvents"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_value, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_id, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_channel, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ACallbackListener_OnMidiNote()
	{
		UClass* OuterClass=Z_Construct_UClass_ACallbackListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnMidiNote"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(CallbackListener_eventOnMidiNote_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsNoteOn, CallbackListener_eventOnMidiNote_Parms, bool);
			UProperty* NewProp_IsNoteOn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IsNoteOn"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsNoteOn, CallbackListener_eventOnMidiNote_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(IsNoteOn, CallbackListener_eventOnMidiNote_Parms), sizeof(bool), true);
			UProperty* NewProp_Velocity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Velocity"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Velocity, CallbackListener_eventOnMidiNote_Parms), 0x0000000000000080);
			UProperty* NewProp_Pitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Pitch"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Pitch, CallbackListener_eventOnMidiNote_Parms), 0x0000000000000080);
			UProperty* NewProp_Channel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Channel"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Channel, CallbackListener_eventOnMidiNote_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GlobalEvents"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_IsNoteOn, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_Velocity, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_Pitch, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
			MetaData->SetValue(NewProp_Channel, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ACallbackListener_NoRegister()
	{
		return ACallbackListener::StaticClass();
	}
	UClass* Z_Construct_UClass_ACallbackListener()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Sandbox();
			OuterClass = ACallbackListener::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ACallbackListener_GetMidiAutomation());
				OuterClass->LinkChild(Z_Construct_UFunction_ACallbackListener_OnMarker());
				OuterClass->LinkChild(Z_Construct_UFunction_ACallbackListener_OnMidiAutomation());
				OuterClass->LinkChild(Z_Construct_UFunction_ACallbackListener_OnMidiNote());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ACallbackListener_GetMidiAutomation()); // 2083241038
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ACallbackListener_OnMarker()); // 1382630115
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ACallbackListener_OnMidiAutomation()); // 157360936
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ACallbackListener_OnMidiNote()); // 2727276013
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CallbackListener.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CallbackListener.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("USTRUCT()\nstruct FMidiAutomations\n{\n    GENERATED_USTRUCT_BODY()\n\n    UPROPERTY(BlueprintReadOnly)\n    float Automation1;\n    UPROPERTY(BlueprintReadOnly)\n    float Automation2;\n    UPROPERTY(BlueprintReadOnly)\n    float Automation3;\n    UPROPERTY(BlueprintReadOnly)\n    float Automation4;\n    UPROPERTY(BlueprintReadOnly)\n    float Automation5;\n    UPROPERTY(BlueprintReadOnly)\n    float Automation6;\n\n    FMidiAutomations() {}\n};"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACallbackListener(Z_Construct_UClass_ACallbackListener, TEXT("ACallbackListener"));
	UPackage* Z_Construct_UPackage_Sandbox()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Sandbox")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0xE6CE8A30;
			Guid.B = 0x2B3EA3D6;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);
		}
		return ReturnPackage;
	}
#endif

